22:17 INFO  minas.MinasKddSerialApp$ jobName = MinasKddSerialApp$, time=1579126669163
22:17 INFO  minas.MinasKddSerialApp$ Max distance = 34.0
22:17 INFO  minas.MinasKddSerialApp$ reading ./tmpfs/KDDTe5Classes_fold1_ini.csv
22:17 INFO  minas.MinasKddSerialApp$ minas.offline(training))
22:19 INFO  kmeans.Kmeans$ kmeans [normal/0] c=100 p=37966 inner=(0.795028214753103,82.06988729701199,9.059243196703132) / 10, improvement=0.3788902562468083 / 1.0E-4
22:19 INFO  kmeans.Kmeans$ kmeans [normal/1] c=100 p=37966 inner=(0.5933755295342681,74.16924353298475,8.612156729471703) / 10, improvement=0.8115417497858497 / 1.0E-4
22:19 INFO  kmeans.Kmeans$ kmeans [normal/2] c=100 p=37966 inner=(0.5616220997038641,69.22846529237536,8.320364492759639) / 10, improvement=0.07815721692986345 / 1.0E-4
22:20 INFO  kmeans.Kmeans$ kmeans [normal/3] c=100 p=37966 inner=(0.5682315989508002,68.95067259584586,8.303654171257728) / 10, improvement=0.6815030823958967 / 1.0E-4
22:20 INFO  kmeans.Kmeans$ kmeans [normal/4] c=100 p=37966 inner=(0.5493233335090842,67.8251502414273,8.23560260341812) / 10, improvement=1.3463780761031925 / 1.0E-4
22:20 INFO  kmeans.Kmeans$ kmeans [normal/4] worst result 0.09549940664267087 -> 0.12857830738455564 = 1.3463780761031925 / 1.0E-4
22:20 INFO  kmeans.Kmeans$ kmeans [normal/5] c=100 p=37966 inner=(0.5327934281022969,65.0645635064666,8.066260813193843) / 10, improvement=3.8879307760754145 / 1.0E-4
22:20 INFO  kmeans.Kmeans$ kmeans [normal/5] worst result 0.12857830738455564 -> 0.4999035584160986 = 3.8879307760754145 / 1.0E-4
22:21 INFO  kmeans.Kmeans$ kmeans [normal/6] c=100 p=37966 inner=(0.4937990283863737,60.22687364265694,7.760597505518305) / 10, improvement=0.2986937662481467 / 1.0E-4
22:21 INFO  kmeans.Kmeans$ kmeans [normal/7] c=100 p=37966 inner=(0.4702103981965751,55.75162162934161,7.466700853077054) / 10, improvement=0.6706729363186464 / 1.0E-4
22:22 INFO  kmeans.Kmeans$ kmeans [normal/8] c=100 p=37966 inner=(0.4485667362873935,50.42701886612314,7.101198410558822) / 10, improvement=1.1444263517969893 / 1.0E-4
22:22 INFO  kmeans.Kmeans$ kmeans [normal/8] worst result 0.10014359289497463 -> 0.11460696667263871 = 1.1444263517969893 / 1.0E-4
22:22 INFO  kmeans.Kmeans$ kmeans [normal/9] c=100 p=37966 inner=(0.44769534657956916,47.4818538135993,6.890707787564301) / 10, improvement=2.0692732125160664 / 1.0E-4
22:22 INFO  kmeans.Kmeans$ kmeans [normal/9] worst result 0.11460696667263871 -> 0.23715312610341285 = 2.0692732125160664 / 1.0E-4
22:22 INFO  kmeans.Kmeans$ kmeans [normal/10] c=100 p=37966 inner=(0.449556506110641,46.53982812737227,6.822010563416937) / 10, improvement=0.30181705536859976 / 1.0E-4
22:22 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 15, Vector(41860, 41738, 37969, 42418, 42755, 42595, 42642, 42216, 42037, 42470, 42799, 38842, 46175, 39360, 45763, 47988, 38023, 38148, 38268, 38391, 38518, 38641, 38771, 38895, 39012, 39131, 39254, 39375, 39494, 39624, 39743, 39856, 39965, 40078, 40189, 40297, 40407, 40515, 40624, 40732, 40840, 40948, 41056, 41164, 41272, 41380, 41488, 41596, 42849, 42957, 43065, 43173, 43281, 43389, 43497, 43605, 43713, 43821, 43929, 44037, 44145, 44253, 44412, 44520, 44628, 44736, 44844, 44952, 45060, 45168, 45276, 45384, 45492, 45600, 45708, 45867, 45975, 46083, 46249, 46357, 46465, 46573, 46681, 46789, 46897, 47011, 47132, 47246, 47416, 47529, 47637, 47745, 47853, 48068, 48176, 48284, 48392, 48500, 48656, 48766) => Set(46175, 42470, 41738, 42037, 41860, 42799, 42595, 38023, 42755, 42642, 38842, 42418, 42216, 39360, 37969)
22:23 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 15, Vector(45060, 43389, 43497, 43281, 43821, 44952, 47011, 47132, 48500, 41488, 40948, 38391, 44736, 38148, 40515, 41738, 38771, 46465, 38842, 39965, 42957, 40840, 42037, 46681, 43173, 45276, 42595, 40407, 44145, 46789, 42799, 42470, 40732, 41380, 43605, 48656, 38895, 44520, 40624, 42216, 40189, 46357, 39624, 43065, 45168, 47637, 48176, 38641, 47745, 45763, 46249, 40078, 43713, 46083, 44844, 41596, 44412, 39494, 37969, 44253, 44628, 47529, 38023, 46175, 45975, 39360, 42418, 44037, 45867, 39375, 39012, 39131, 41860, 40297, 45492, 47416, 38268, 42642, 39254, 42755, 46573, 47246, 48284, 41164, 41272, 47988, 41056, 45600, 46897, 48068, 47853, 38518, 45384, 48766, 39856, 42849, 43929, 45708, 39743, 48392) => Set(46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 42642, 38842, 42418, 42216, 37969, 45763)
22:23 INFO  kmeans.Kmeans$ kmeans [dos/0] c=100 p=10825 inner=(0.11174546175375843,23.079178148390973,4.804079323698868) / 10, improvement=0.16652317373863348 / 1.0E-4
22:23 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 15, Vector(40297, 43605, 41596, 44145, 47132, 42216, 38895, 41164, 47745, 46175, 42418, 47529, 39360, 40732, 38391, 45708, 45600, 46897, 43065, 48766, 40624, 46789, 44037, 42755, 41860, 42957, 44736, 46465, 42642, 46357, 42849, 40840, 38641, 39965, 46573, 47416, 48068, 47246, 43497, 44253, 43281, 44844, 45763, 45276, 45168, 46681, 47011, 39743, 42799, 41056, 38023, 38842, 47988, 39624, 45975, 41380, 40407, 38148, 48392, 40515, 41488, 43173, 39254, 43389, 38268, 47637, 40189, 45492, 38518, 40948, 42595, 43713, 44628, 48500, 48284, 45060, 41272, 41738, 40078, 39856, 42470, 42037, 39012, 44952, 44520, 46083, 47853, 44412, 48656, 45867, 43929, 39494, 45384, 46249, 37969, 43821, 38771, 39375, 48176, 39131) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 42642, 38842, 42216, 39360, 37969)
22:23 INFO  kmeans.Kmeans$ kmeans [dos/1] c=100 p=10825 inner=(0.07226582299894474,18.08165292713194,4.252252688532508) / 10, improvement=0.1694905537855418 / 1.0E-4
22:23 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 18, Vector(39494, 37969, 44145, 46789, 43281, 44952, 40948, 40189, 38771, 46249, 39375, 43821, 42755, 48284, 39012, 38148, 45492, 42037, 47853, 41272, 39360, 44412, 45867, 44844, 46083, 45763, 38391, 45708, 47011, 45060, 38268, 38641, 41056, 45168, 47745, 39131, 45276, 41738, 43929, 46897, 40515, 41380, 43605, 40407, 41860, 46573, 39965, 38842, 44520, 40297, 39856, 41164, 40624, 48656, 46465, 42418, 48500, 47529, 43389, 44736, 43173, 41596, 45384, 47246, 47132, 46681, 40078, 47637, 46357, 38518, 39254, 48766, 43497, 41488, 43065, 42216, 45600, 44037, 38023, 47416, 44253, 42470, 42799, 45975, 43713, 44628, 42849, 42957, 40732, 48176, 38895, 42642, 48392, 40840, 39624, 46175, 47988, 48068, 39743, 42595) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 42642, 39494, 38842, 42418, 42216, 39360, 37969, 45763)
22:23 INFO  kmeans.Kmeans$ kmeans [dos/2] c=100 p=10825 inner=(0.06856312977118563,17.770859377859416,4.215549712417043) / 10, improvement=0.1359299170778003 / 1.0E-4
22:23 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 19, Vector(43497, 41738, 48392, 45384, 47529, 38148, 38268, 42595, 42216, 47132, 46681, 46465, 45763, 43929, 38842, 40189, 45060, 43713, 42799, 39375, 40078, 40948, 42642, 37969, 46083, 46357, 44628, 48176, 38518, 46789, 42037, 39856, 42418, 41164, 46573, 45276, 42755, 43389, 38771, 45867, 41596, 41272, 44145, 44736, 39012, 47011, 40297, 40840, 47853, 39494, 44037, 44952, 39624, 38391, 48766, 44520, 44844, 42957, 48656, 43821, 45975, 41380, 43281, 39131, 44412, 39360, 47637, 43605, 39254, 38895, 40407, 42849, 41056, 40732, 47246, 45600, 48500, 47416, 45168, 48068, 38023, 43065, 42470, 48284, 46897, 40624, 39965, 39743, 40515, 47745, 45708, 47988, 44253, 43173, 45492, 38641, 41860, 41488, 46249, 46175) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 43497, 42595, 42755, 45060, 42642, 39494, 38842, 42418, 42216, 39360, 37969, 47988)
22:23 INFO  kmeans.Kmeans$ kmeans [dos/3] c=100 p=10825 inner=(0.06655942917662303,17.43025966248205,4.174956246774576) / 10, improvement=3.6982867808358235 / 1.0E-4
22:23 INFO  kmeans.Kmeans$ kmeans [dos/3] worst result 0.022370448363953098 -> 0.08273233346577812 = 3.6982867808358235 / 1.0E-4
22:23 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 19, Vector(43065, 44145, 47011, 39494, 43281, 46789, 42595, 42418, 45600, 47416, 38842, 44520, 38641, 43605, 42470, 48392, 42849, 44628, 39965, 46897, 45708, 47988, 41738, 38391, 47529, 39375, 42216, 40189, 48766, 48500, 38148, 48284, 42755, 40624, 40948, 47853, 40297, 38895, 46083, 43497, 45763, 44037, 38268, 41596, 43173, 44412, 45492, 38771, 44253, 47745, 44736, 37969, 39254, 41488, 45867, 41380, 45060, 39360, 41272, 39743, 43713, 39131, 46465, 44952, 47637, 46573, 47132, 45384, 45168, 40407, 42037, 42642, 46175, 39624, 41164, 48068, 38023, 42799, 43821, 40515, 40078, 42957, 45276, 44844, 41056, 48176, 47246, 46681, 46249, 43929, 38518, 46357, 48656, 43389, 40732, 40840, 39856, 41860, 45975, 39012) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 42642, 39494, 38842, 42418, 42216, 39360, 37969, 45763, 43065)
22:24 INFO  kmeans.Kmeans$ kmeans [dos/4] c=100 p=10825 inner=(0.06699288413377855,17.325861158229536,4.1624345229960715) / 10, improvement=0.490247386215585 / 1.0E-4
22:24 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 20, Vector(38148, 44736, 40078, 43821, 47853, 42216, 45600, 46083, 46789, 44520, 39494, 45975, 46357, 40948, 44952, 39375, 40515, 41164, 38391, 38895, 39131, 38518, 47988, 40732, 47132, 47637, 48392, 48068, 43929, 47011, 41272, 44412, 42642, 40840, 45708, 42849, 41488, 47529, 40189, 41860, 41056, 45168, 39012, 46175, 38641, 43497, 45763, 46573, 40297, 42957, 43281, 44037, 39254, 45276, 48766, 43389, 46897, 37969, 42799, 44253, 48176, 39360, 44844, 38023, 41596, 38771, 38842, 47416, 43173, 45492, 44628, 42037, 47745, 39624, 45867, 40407, 44145, 46681, 46249, 45384, 41380, 41738, 39965, 42595, 48500, 47246, 48656, 42418, 39856, 38268, 45060, 42470, 46465, 43713, 39743, 42755, 48284, 43065, 43605, 40624) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 42642, 39494, 38842, 42418, 42216, 39360, 37969, 47988, 43065, 38148)
22:24 INFO  kmeans.Kmeans$ kmeans [dos/5] c=100 p=10825 inner=(0.06591757221716732,17.303001414617558,4.159687658300507) / 10, improvement=0.324676575702579 / 1.0E-4
22:24 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 21, Vector(42849, 47529, 40732, 43929, 38023, 45763, 43713, 47745, 45060, 39131, 45492, 43065, 41860, 40948, 42755, 45708, 45867, 43605, 39856, 44253, 38391, 45975, 48176, 44520, 47011, 47637, 44844, 44412, 42595, 45600, 44736, 39624, 47416, 46681, 39494, 48068, 47988, 42957, 44145, 40840, 43821, 42418, 41488, 46249, 38518, 46465, 48500, 38641, 41380, 38268, 39375, 45168, 39743, 41164, 41272, 48656, 46897, 42470, 39360, 47132, 46789, 41738, 42642, 39254, 42216, 44952, 46357, 40189, 46083, 44628, 38895, 46573, 40515, 38842, 42799, 43173, 48766, 40297, 46175, 43281, 41056, 43389, 39012, 41596, 42037, 40624, 38148, 43497, 47853, 48392, 39965, 48284, 37969, 40078, 45276, 40407, 47246, 44037, 45384, 38771) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 42642, 42849, 39494, 38842, 42418, 42216, 39360, 37969, 47988, 45763, 43065)
22:24 INFO  kmeans.Kmeans$ kmeans [dos/6] c=100 p=10825 inner=(0.06500107337390697,17.27045299929981,4.155773453798921) / 10, improvement=0.35913560807593914 / 1.0E-4
22:24 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 21, Vector(39494, 40624, 41272, 48176, 38641, 39624, 45168, 38023, 46357, 44628, 45276, 43713, 44736, 38391, 47988, 38895, 40840, 48284, 44844, 46249, 42216, 42037, 38268, 39375, 41596, 44412, 45492, 40948, 44145, 43821, 39012, 43605, 47529, 41164, 48392, 43281, 37969, 48766, 48068, 38148, 40078, 41056, 41488, 45708, 42470, 43173, 48500, 38771, 42957, 45867, 44520, 46175, 42755, 44952, 39360, 39254, 41860, 48656, 47853, 47637, 46897, 45763, 39743, 40407, 42595, 39965, 47416, 47246, 42418, 44037, 43929, 45384, 39856, 40189, 42849, 38842, 41380, 40732, 45600, 38518, 46573, 42799, 45060, 40297, 42642, 43389, 43497, 40515, 46681, 47132, 39131, 47011, 45975, 43065, 44253, 46083, 46465, 46789, 47745, 41738) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 42642, 40624, 39494, 38842, 42418, 42216, 39360, 37969, 47988, 45763, 43065)
22:24 INFO  kmeans.Kmeans$ kmeans [dos/7] c=100 p=10825 inner=(0.0646492929685354,17.26024895156211,4.154545577023089) / 10, improvement=0.8263180439479079 / 1.0E-4
22:24 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 22, Vector(39856, 44952, 38641, 41860, 40948, 45763, 45276, 40515, 47745, 43389, 48068, 43065, 48176, 47637, 45600, 38771, 42957, 44844, 43821, 38895, 40189, 46789, 38023, 42418, 40078, 40624, 44145, 46897, 40297, 39743, 44253, 43497, 38148, 46573, 38842, 41056, 46465, 43173, 45060, 46175, 48766, 42216, 48500, 39375, 47011, 41380, 42849, 41272, 45168, 45975, 47853, 39131, 44037, 42037, 41488, 44412, 42642, 47988, 39965, 39624, 42755, 39012, 43605, 41738, 39360, 38391, 46357, 44628, 45384, 37969, 39494, 40840, 45867, 42799, 41596, 38268, 46249, 47132, 45708, 48284, 43713, 39254, 46083, 42470, 47246, 46681, 38518, 43929, 47529, 44736, 48656, 48392, 44520, 40407, 42595, 41164, 45492, 40732, 47416, 43281) => Set(40297, 46175, 42470, 41738, 42037, 41860, 39856, 42799, 42595, 42755, 45060, 42642, 40624, 39494, 38842, 42418, 42216, 39360, 37969, 47988, 45763, 43065)
22:24 INFO  kmeans.Kmeans$ kmeans [dos/8] c=100 p=10825 inner=(0.06494319379776411,17.26041898888879,4.154566040982956) / 10, improvement=1.756996449439551 / 1.0E-4
22:24 INFO  kmeans.Kmeans$ kmeans [dos/8] worst result 0.003907934007033719 -> 0.006866226175002321 = 1.756996449439551 / 1.0E-4
22:24 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 22, Vector(38771, 48392, 48284, 47637, 47011, 44412, 48500, 44628, 41164, 38842, 46175, 47745, 44844, 39743, 45867, 40732, 45975, 39360, 38268, 43821, 40078, 42470, 47246, 40297, 40624, 43065, 41380, 46249, 38518, 45600, 39254, 48068, 38895, 48176, 41056, 47416, 45384, 48656, 39856, 46357, 43605, 39012, 41488, 40840, 39494, 47988, 40948, 41272, 43929, 46083, 46573, 44037, 45168, 43497, 44736, 37969, 39131, 42216, 42849, 41596, 46897, 46789, 38641, 46681, 41860, 44952, 42755, 45763, 38391, 47529, 44253, 48766, 42799, 39965, 43389, 45276, 40407, 44145, 40189, 44520, 42418, 40515, 46465, 45492, 41738, 43713, 43281, 42595, 39375, 43173, 42642, 42957, 38023, 38148, 45708, 39624, 45060, 47853, 47132, 42037) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 38771, 42642, 40624, 39494, 38842, 42418, 42216, 39360, 37969, 47988, 45763, 43065)
22:25 INFO  kmeans.Kmeans$ kmeans [dos/9] c=100 p=10825 inner=(0.06465889955843213,17.249225844587215,4.153218733053584) / 10, improvement=0.8588860433210163 / 1.0E-4
22:25 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 22, Vector(45975, 38023, 48656, 38148, 48392, 45867, 38842, 46681, 41488, 43713, 45763, 39965, 39375, 46465, 46175, 45276, 39131, 40515, 41164, 46897, 40297, 42799, 43389, 45168, 43281, 47853, 44412, 48068, 44520, 45492, 40732, 45708, 47246, 42595, 44145, 38518, 44037, 38641, 42216, 43065, 40189, 43605, 41380, 46083, 43173, 46573, 47011, 38771, 38268, 42755, 40948, 38391, 39494, 48500, 43929, 47529, 45600, 39012, 38895, 41056, 48766, 47416, 47988, 42849, 44736, 46789, 41272, 46249, 45384, 43497, 44844, 39360, 41738, 39856, 48284, 47745, 41596, 42418, 40407, 40078, 43821, 41860, 47637, 39743, 40624, 42957, 45060, 42642, 44628, 44952, 39254, 37969, 39624, 40840, 47132, 42037, 46357, 44253, 42470, 48176) => Set(40297, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 42755, 45060, 45975, 42642, 40624, 39494, 38842, 42418, 42216, 39360, 37969, 47988, 45763, 43065)
22:25 INFO  kmeans.Kmeans$ kmeans [dos/10] c=100 p=10825 inner=(0.06460634898707375,17.24967574878028,4.153272896015897) / 10, improvement=1.0433892883608344 / 1.0E-4
22:25 INFO  kmeans.Kmeans$ kmeans [dos/10] worst result 0.005897305831994939 -> 0.006153185735291398 = 1.0433892883608344 / 1.0E-4
22:25 INFO  minas.MinasKddSerialApp$ minas.offline(training)) Done
22:25 INFO  minas.MinasKddSerialApp$ writing ./tmpfs/out/MinasKddSerialApp/offline_training
22:25 INFO  minas.MinasKddSerialApp$ reading ./tmpfs/KDDTe5Classes_fold1_onl.csv
22:26 INFO  minas.MinasKddSerialApp$ Ended MINAS in 1579127204889 (535726ms)
22:26 INFO  minas.MinasKddSerialApp$ writing ./tmpfs/out/MinasKddSerialApp/result
22:26 INFO  minas.MinasKddSerialApp$ evaluation of 442800 entries
22:26 INFO  minas.MinasKddSerialApp$ 68000
[...]
22:27 INFO  minas.MinasKddSerialApp$ writing ./tmpfs/out/MinasKddSerialApp/evaluation
22:27 INFO  minas.MinasKddSerialApp$ Ended App in 1579127223166 (554003ms)
