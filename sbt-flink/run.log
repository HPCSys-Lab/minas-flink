Exception in thread "main" org.apache.flink.runtime.client.JobExecutionException: Job execution failed.
    at org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)
    at org.apache.flink.runtime.minicluster.MiniCluster.executeJobBlocking(MiniCluster.java:626)
    at org.apache.flink.client.LocalExecutor.executePlan(LocalExecutor.java:222)
    at org.apache.flink.api.java.LocalEnvironment.execute(LocalEnvironment.java:91)
    at org.apache.flink.api.scala.ExecutionEnvironment.execute(ExecutionEnvironment.scala:539)
    at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$.delayedEndpoint$br$ufscar$dc$ppgcc$gsdr$minas$MinasKddCassales$1(MinasKddCassales.scala:82)
    at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$delayedInit$body.apply(MinasKddCassales.scala:11)
    at scala.Function0$class.apply$mcV$sp(Function0.scala:34)
    at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
    at scala.App$$anonfun$main$1.apply(App.scala:76)
    at scala.App$$anonfun$main$1.apply(App.scala:76)
    at scala.collection.immutable.List.foreach(List.scala:392)
    at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)
    at scala.App$class.main(App.scala:76)
    at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$.main(MinasKddCassales.scala:11)
    at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales.main(MinasKddCassales.scala)
Caused by: java.lang.AssertionError: assertion failed: Didn't get k = 100 clusters. Got 14.
    at scala.Predef$.assert(Predef.scala:170)
    at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$.byZeroDistance(KMeansVector.scala:207)
    at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$$anonfun$47.apply(KMeansVector.scala:229)
    at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$$anonfun$47.apply(KMeansVector.scala:229)
    at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$.initialization$1(KMeansVector.scala:215)
    at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$.kmeans(KMeansVector.scala:229)
    at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$$anonfun$3.apply(MinasKddCassales.scala:55)
    at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$$anonfun$3.apply(MinasKddCassales.scala:42)
    at org.apache.flink.api.scala.GroupedDataSet$$anon$3.reduce(GroupedDataSet.scala:355)
    at org.apache.flink.api.java.operators.translation.PlanUnwrappingReduceGroupOperator$TupleUnwrappingNonCombinableGroupReducer.reduce(PlanUnwrappingReduceGroupOperator.java:111)
    at org.apache.flink.runtime.operators.GroupReduceDriver.run(GroupReduceDriver.java:131)
    at org.apache.flink.runtime.operators.BatchTask.run(BatchTask.java:504)
    at org.apache.flink.runtime.operators.BatchTask.invoke(BatchTask.java:369)
    at org.apache.flink.runtime.taskmanager.Task.doRun(Task.java:705)
    at org.apache.flink.runtime.taskmanager.Task.run(Task.java:530)
    at java.lang.Thread.run(Thread.java:748)

real    7m35.450s
user    9m8.772s
sys    0m5.120s

00:51:19,569 INFO  br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$               - Label 'dos' contains 10825 data points.
00:51:19,571 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [dos] Running kmeansInitByFarthest.
00:51:19,626 INFO  br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$               - Label 'normal' contains 37966 data points.
00:51:19,627 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Running kmeansInitByFarthest.
00:51:27,992 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 2132.027735943854 -> 4.225468139653628 (503.56604226546636 improvement, 1.0E-5 goal).
00:51:28,151 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 4.225468139653628 -> 3.994086738784251 (0.05793099048715389 improvement, 1.0E-5 goal).
00:51:28,312 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 3.994086738784251 -> 3.988395408624905 (0.0014269723977311521 improvement, 1.0E-5 goal).
00:51:28,481 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 7, var 3.988395408624905 -> 3.988395408624905 (0.0 improvement, 1.0E-5 goal).
00:51:28,481 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [dos] Running kmeanspp [1].
00:51:36,970 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 1852.121768458693 -> 3.992787564693185 (462.86684451643606 improvement, 1.0E-5 goal).
00:51:37,138 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 3.992787564693185 -> 3.9934889020626345 (-1.7562021246320114E-4 improvement, 1.0E-5 goal).
00:51:37,139 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [dos] Running kmeanspp [2].
00:51:45,333 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 2132.027735943854 -> 4.225468139653628 (503.56604226546636 improvement, 1.0E-5 goal).
00:51:45,496 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 4.225468139653628 -> 3.994086738784251 (0.05793099048715389 improvement, 1.0E-5 goal).
00:51:45,657 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 3.994086738784251 -> 3.988395408624905 (0.0014269723977311521 improvement, 1.0E-5 goal).
00:51:45,814 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 7, var 3.988395408624905 -> 3.988395408624905 (0.0 improvement, 1.0E-5 goal).
00:51:45,814 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [dos] Running kmeanspp [3].
00:51:48,798 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 25029.15763096826 -> 4.037066565633861 (6198.83773466426 improvement, 1.0E-5 goal).
00:51:49,355 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 4.037066565633861 -> 4.033839031525892 (8.001147499305805E-4 improvement, 1.0E-5 goal).
00:51:49,927 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 4.033839031525892 -> 4.033839031525892 (0.0 improvement, 1.0E-5 goal).
00:51:49,927 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Running kmeanspp [1].
00:51:54,100 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 2132.027735943854 -> 4.225468139653628 (503.56604226546636 improvement, 1.0E-5 goal).
00:51:54,261 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 4.225468139653628 -> 3.994086738784251 (0.05793099048715389 improvement, 1.0E-5 goal).
00:51:54,428 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 3.994086738784251 -> 3.988395408624905 (0.0014269723977311521 improvement, 1.0E-5 goal).
00:51:54,594 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 7, var 3.988395408624905 -> 3.988395408624905 (0.0 improvement, 1.0E-5 goal).
00:51:54,595 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [dos] Running byZeroDistance [1].
00:52:18,382 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 24866.69144054861 -> 4.034221928264502 (6162.937404218639 improvement, 1.0E-5 goal).
00:52:18,938 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 4.034221928264502 -> 4.033839031525892 (9.49211744984968E-5 improvement, 1.0E-5 goal).
00:52:19,490 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 4.033839031525892 -> 4.033839031525892 (0.0 improvement, 1.0E-5 goal).
00:52:19,490 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Running kmeanspp [2].
00:52:48,222 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 24902.159050458107 -> 4.034221928264502 (6171.729089589492 improvement, 1.0E-5 goal).
00:52:48,782 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 4.034221928264502 -> 4.033839031525892 (9.49211744984968E-5 improvement, 1.0E-5 goal).
00:52:49,343 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 4.033839031525892 -> 4.033839031525892 (0.0 improvement, 1.0E-5 goal).
00:52:49,343 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Running kmeanspp [3].
00:53:17,516 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 24799.128962676565 -> 3.7514975502345926 (6609.461190658594 improvement, 1.0E-5 goal).
00:53:18,078 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 3.7514975502345926 -> 4.033839031525892 (-0.06999324442167865 improvement, 1.0E-5 goal).
00:53:18,078 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Running byZeroDistance [1].
00:54:00,482 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 4401.86063109697 -> 71.70196470462444 (60.39107413904755 improvement, 1.0E-5 goal).
00:54:14,826 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 71.70196470462444 -> 60.183068665970595 (0.19139761886497153 improvement, 1.0E-5 goal).
00:54:29,028 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 60.183068665970595 -> 55.965583208330166 (0.07535855459490115 improvement, 1.0E-5 goal).
00:54:43,326 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 7, var 55.965583208330166 -> 52.77538135899024 (0.06044867449918456 improvement, 1.0E-5 goal).
00:54:57,665 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 6, var 52.77538135899024 -> 53.872932198031734 (-0.020372955290553052 improvement, 1.0E-5 goal).
00:54:57,665 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Running byZeroDistance [2].
00:55:39,541 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 4624.850366725467 -> 66.07210386112759 (68.99701986856847 improvement, 1.0E-5 goal).
00:55:53,681 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 66.07210386112759 -> 53.265752065767224 (0.24042374881984885 improvement, 1.0E-5 goal).
00:56:07,759 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 53.265752065767224 -> 50.97569262666159 (0.044924537972984346 improvement, 1.0E-5 goal).
00:56:21,887 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 7, var 50.97569262666159 -> 50.62619085930027 (0.006903576220708585 improvement, 1.0E-5 goal).
00:56:35,896 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 6, var 50.62619085930027 -> 50.9853724711094 (-0.007044797250675305 improvement, 1.0E-5 goal).
00:56:35,896 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Running byZeroDistance [3].
00:57:17,704 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 10, var 4544.763713428407 -> 77.70797623048146 (57.48516373594212 improvement, 1.0E-5 goal).
00:57:31,886 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 9, var 77.70797623048146 -> 60.87979530557749 (0.27641651619288976 improvement, 1.0E-5 goal).
00:57:45,918 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 8, var 60.87979530557749 -> 56.94368431828538 (0.06912287173571885 improvement, 1.0E-5 goal).
00:58:00,051 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 7, var 56.94368431828538 -> 56.176083831087 (0.01366418651585688 improvement, 1.0E-5 goal).
00:58:14,323 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 6, var 56.176083831087 -> 55.29252739909823 (0.015979671640099058 improvement, 1.0E-5 goal).
00:58:28,496 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 5, var 55.29252739909823 -> 52.471282773584996 (0.053767403356365095 improvement, 1.0E-5 goal).
00:58:42,542 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - Iter 4, var 52.471282773584996 -> 53.16842660002081 (-0.013111989032143723 improvement, 1.0E-5 goal).
00:58:42,543 INFO  br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$            - [normal] Got best result with kmeansInitByFarthest algorithm with 4.033839031525892 variance.

$ cat tmpfs/out/clusters/*
(normal,List(
    Cluster(100,
        Point(33,Vector(7.19697521077339E-5, 1.3153335259715166E-6, 9.096938594320336E-4, 0.0, 0.0, 0.001476560608913155, 4.841182324305425E-5, 2.40355331586305E-5, 4.034318603587854E-4, 4.034318603587854E-5, 4.19547466730956E-5, 1.3735894293168162E-4, 1.344772867862618E-4, 5.345472149753907E-4, 0.0, 0.019482206128583084, 0.025180306146105374, 0.0010066969688819554, 9.70657056023237E-4, 2.151636588580189E-6, 5.279578279228639E-4, 0.9968448938974211, 0.005521906350017485, 0.12375971598396993, 0.5144541988819589, 0.9011215405717976, 0.9405734111508532, 0.01053199214652641, 0.07220999973105352, 0.021141174255662393, 0.001050267609800702, 3.595922648664605E-4, 0.0027616255614426747, 0.001138753664506065)),
        2.3669208486943725
    ),
    Cluster(99,
        Point(6699,Vector(0.0, 1.1453245276810346E-8, 4.0226907631246505E-7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0021239732259712664, 0.002956610617373164, 0.0, 0.0, 0.9996305732484077, 0.9738598726114651, 1.0, 0.0, 0.2297324840764331, 0.06578244036468145, 0.8222505307855628, 0.9989171974522293, 9.936305732484076E-4, 0.30315923566879016, 0.15904458598726126, 1.6560509554140127E-4, 8.789808917197456E-4, 0.976624203821656, 0.945630573248408)),
        1.666918182831519))
        )
(dos,List(
    Cluster(100,
        Point(30,Vector(0.0, 1.4883707192252697E-6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9977692662641173, 0.9977589537713211, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.9997892936881303, 0.9974877324354003, 0.9975325480471171, 1.2502583178342636E-4, 0.9975325480471171, 0.0, 7.439553626782394E-5, 0.0, 0.0, 0.0))
        ,1.6816627144864793), 
    Cluster(99,
        Point(3422,Vector(1.4946931740935055E-8, 6.823206984926767E-5, 0.0013941679963327069, 0.09154315605928506, 0.0, 0.05704736995059696, 0.0, 9.517253350270398E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01994141101520666, 0.020367947013991874, 0.0040104620749782036, 0.004210985178727114, 0.03487358326068005, 0.0731473408892766, 0.9984481255448998, 0.003095030514385353, 0.07495204882301656, 0.830374207224302, 0.7997948612749372, 0.9295117698343504, 0.0037489102005231006, 0.06151700087183961, 7.236268526591107E-4, 0.003487358326068004, 0.002519616390584133, 0.03878814298169121, 0.03878814298169121))
        ,2.3067326941384256))
        )


$ ./run.sh
real	1m58.852s
user	3m18.198s
sys	0m4.694s
MinasKddCassales$               - Label 'dos' contains 10825 data points.
kmeans.KMeansVector$            - [dos] Running kmeansInitByFarthest.
MinasKddCassales$               - Label 'normal' contains 37966 data points.
kmeans.KMeansVector$            - [normal] Running kmeansInitByFarthest.
kmeans.KMeansVector$            - Iter 10, var 2132.0277359438555 -> 4.225468139653628 (503.56604226546665 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 4.225468139653628 -> 3.994086738784251 (0.05793099048715389 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 8, var 3.994086738784251 -> 3.988395408624905 (0.0014269723977311521 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 7, var 3.988395408624905 -> 3.988395408624905 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [dos] Running kmeanspp [1].
kmeans.KMeansVector$            - Iter 10, var 2127.7515500430272 -> 4.199920896089708 (505.61705367452225 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 4.199920896089708 -> 3.994086738784251 (0.051534723897386 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 8, var 3.994086738784251 -> 3.988395408624905 (0.0014269723977311521 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 7, var 3.988395408624905 -> 3.988395408624905 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [dos] Running kmeanspp [2].
kmeans.KMeansVector$            - Iter 10, var 1846.5575846402608 -> 3.9955989671898653 (461.1478781537874 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 3.9955989671898653 -> 3.9934889020626345 (5.28376359363536E-4 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 8, var 3.9934889020626345 -> 3.988395408624905 (0.0012770783525410945 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 7, var 3.988395408624905 -> 3.988395408624905 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [dos] Running kmeanspp [3].
kmeans.KMeansVector$            - Iter 10, var 25125.916469949545 -> 4.037066565633861 (6222.805345157721 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 4.037066565633861 -> 4.033839031525892 (8.001147499305805E-4 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 8, var 4.033839031525892 -> 4.033839031525892 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [normal] Running kmeanspp [1].
kmeans.KMeansVector$            - Iter 10, var 1875.7979906582868 -> 3.982646962817757 (469.99278649874196 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 3.982646962817757 -> 3.9939818610158087 (-0.002837994410712974 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [dos] Got best result with kmeansInitByFarthest algorithm with 3.988395408624905 variance.
kmeans.KMeansVector$            - Iter 10, var 24877.815882947623 -> 4.033839031525892 (6166.280272841483 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 4.033839031525892 -> 4.033839031525892 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [normal] Running kmeanspp [2].
kmeans.KMeansVector$            - Iter 10, var 24931.443278816638 -> 4.034221928264503 (6178.988042834814 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 4.034221928264503 -> 4.033839031525892 (9.492117449871884E-5 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 8, var 4.033839031525892 -> 4.033839031525892 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [normal] Running kmeanspp [3].
kmeans.KMeansVector$            - Iter 10, var 24938.884288254914 -> 4.033839031525892 (6181.419301650025 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - Iter 9, var 4.033839031525892 -> 4.033839031525892 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [normal] Got best result with kmeansInitByFarthest algorithm with 4.033839031525892 variance.
git_prompt_info:5: character not in range                                                                                           

(normal,(List(Cluster(100,Point(57,Vector(7.196975210773407E-5, 1.315333525971518E-6, 9.096938594320344E-4, 0.0, 0.0, 0.0014765606089131543, 4.841182324305425E-5, 2.40355331586305E-5, 4.034318603587854E-4, 4.034318603587854E-5, 4.1954746673095605E-5, 1.3735894293168162E-4, 1.344772867862618E-4, 5.345472149753907E-4, 0.0, 0.01948220612858283, 0.025180306146105603, 0.0010066969688819559, 9.70657056023237E-4, 2.151636588580189E-6, 5.279578279228636E-4, 0.9968448938974211, 0.005521906350017485, 0.12375971598396977, 0.5144541988819579, 0.9011215405717966, 0.940573411150854, 0.010531992146526385, 0.0722099997310542, 0.021141174255662414, 0.0010502676098007053, 3.595922648664606E-4, 0.002761625561442674, 0.0011387536645060651)),2.3669208486943725), Cluster(99,Point(6678,Vector(0.0, 1.1453245276810346E-8, 4.0226907631246505E-7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0021239732259712664, 0.0029566106173731614, 0.0, 0.0, 0.9996305732484077, 0.9738598726114652, 1.0, 0.0, 0.2297324840764331, 0.06578244036468142, 0.8222505307855625, 0.9989171974522293, 9.936305732484076E-4, 0.30315923566879033, 0.1590445859872613, 1.6560509554140127E-4, 8.789808917197455E-4, 0.9766242038216562, 0.9456305732484077)),1.6669181828315187)),4.033839031525892))
(dos,(List(Cluster(100,Point(15,Vector(0.0, 1.4883707192252697E-6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9977692662641173, 0.9977589537713211, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.9997892936881303, 0.9974877324354003, 0.9975325480471171, 1.250258317834264E-4, 0.9975325480471171, 0.0, 7.439553626782395E-5, 0.0, 0.0, 0.0)),1.6816627144864793), Cluster(99,Point(3407,Vector(1.4946931740935055E-8, 6.823206984926768E-5, 0.0013941679963327066, 0.09154315605928506, 0.0, 0.05704736995059695, 0.0, 9.517253350270398E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019941411015206665, 0.020367947013991878, 0.0040104620749782036, 0.004210985178727114, 0.03487358326068004, 0.07314734088927657, 0.9984481255448998, 0.0030950305143853532, 0.07495204882301656, 0.830374207224302, 0.799794861274937, 0.9295117698343504, 0.0037489102005231006, 0.06151700087183956, 7.236268526591106E-4, 0.003487358326068004, 0.002519616390584133, 0.03878814298169121, 0.03878814298169121)),2.3067326941384256)),3.988395408624905))

(normal,(List(
    Cluster(
        100,Point(57,
        Vector(7.196975210773407E-5, 1.315333525971518E-6, 9.096938594320344E-4, 0.0, 0.0, 0.0014765606089131543, 4.841182324305425E-5, 2.40355331586305E-5, 4.034318603587854E-4, 4.034318603587854E-5, 4.1954746673095605E-5, 1.3735894293168162E-4, 1.344772867862618E-4, 5.345472149753907E-4, 0.0, 0.01948220612858283, 0.025180306146105603, 0.0010066969688819559, 9.70657056023237E-4, 2.151636588580189E-6, 5.279578279228636E-4, 0.9968448938974211, 0.005521906350017485, 0.12375971598396977, 0.5144541988819579, 0.9011215405717966, 0.940573411150854, 0.010531992146526385, 0.0722099997310542, 0.021141174255662414, 0.0010502676098007053, 3.595922648664606E-4, 0.002761625561442674, 0.0011387536645060651)
        ),2.3669208486943725),
    Cluster(
        99,Point(6678,
        Vector(0.0, 1.1453245276810346E-8, 4.0226907631246505E-7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0021239732259712664, 0.0029566106173731614, 0.0, 0.0, 0.9996305732484077, 0.9738598726114652, 1.0, 0.0, 0.2297324840764331, 0.06578244036468142, 0.8222505307855625, 0.9989171974522293, 9.936305732484076E-4, 0.30315923566879033, 0.1590445859872613, 1.6560509554140127E-4, 8.789808917197455E-4, 0.9766242038216562, 0.9456305732484077)
        ),1.6669181828315187)),4.033839031525892))
(dos,(List(
    Cluster(
        100,Point(15,
        Vector(0.0, 1.4883707192252697E-6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9977692662641173, 0.9977589537713211, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.9997892936881303, 0.9974877324354003, 0.9975325480471171, 1.250258317834264E-4, 0.9975325480471171, 0.0, 7.439553626782395E-5, 0.0, 0.0, 0.0)
        ),1.6816627144864793),
    Cluster(
        99,Point(3407,
        Vector(1.4946931740935055E-8, 6.823206984926768E-5, 0.0013941679963327066, 0.09154315605928506, 0.0, 0.05704736995059695, 0.0, 9.517253350270398E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019941411015206665, 0.020367947013991878, 0.0040104620749782036, 0.004210985178727114, 0.03487358326068004, 0.07314734088927657, 0.9984481255448998, 0.0030950305143853532, 0.07495204882301656, 0.830374207224302, 0.799794861274937, 0.9295117698343504, 0.0037489102005231006, 0.06151700087183956, 7.236268526591106E-4, 0.003487358326068004, 0.002519616390584133, 0.03878814298169121, 0.03878814298169121)
        ),2.3067326941384256)),3.988395408624905))

# 2020-01-06 12:30

[info] Done packaging.
[success] Total time: 31 s, completed Jan 6, 2020 12:21:24 PM

real	11m0.385s
user	15m7.352s
sys	0m5.580s
MinasKddCassales$               - Label 'dos' contains 10825 data points.
kmeans.KMeansVector$            - [dos] Running kmeansInitByFarthest.
kmeans.KMeansVector$            - [kmeansInitByFarthest] got 10825 points and 100 clusters.
MinasKddCassales$               - Label 'normal' contains 37966 data points.
kmeans.KMeansVector$            - [normal] Running kmeansInitByFarthest.
kmeans.KMeansVector$            - [kmeansInitByFarthest] got 37966 points and 100 clusters.
kmeans.KMeansVector$            - [kmeansInitByFarthest] Clusters with [10718, 107] points with variance [2.4088472971816888, 2.3518842420280968]
kmeans.KMeansVector$            - [kmeansIterationRec] got 10825 points and 2 clusters.
kmeans.KMeansVector$            - [kmeansIterationRec] Iter 1, var 2132.027735943855 -> 4.225468139653628 (503.5660422654666 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [kmeansIterationRec] Iter 2, var 4.225468139653628 -> 3.994086738784251 (0.05793099048715389 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [kmeansIterationRec] Iter 3, var 3.994086738784251 -> 3.988395408624905 (0.0014269723977311521 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [kmeansIterationRec] Iter 4, var 3.988395408624905 -> 3.988395408624905 (0.0 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [dos] Running kmeanspp [1].
kmeans.KMeansVector$            - [kmeansIterationRec] got 10825 points and 100 clusters.
kmeans.KMeansVector$            - assertion failed: [kmeansIterationRec] Expected k=100, got 52 on iteration 1.
kmeans.KMeansVector$            - [kmeansInitByFarthest] Clusters with [37071, 1] points with variance [2.290190290182646, 0.0]
kmeans.KMeansVector$            - [kmeansIterationRec] got 37966 points and 88 clusters.
kmeans.KMeansVector$            - [kmeansIterationRec] Iter 1, var 24339.564903450148 -> 29.399569852891855 (826.888469975557 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - assertion failed: [kmeansIterationRec] Expected k=88, got 86 on iteration 2.
cat: 'tmpfs/out/stream-clusters.csv/*': No such file or directory

# 2020-01-06 13:30
[info] Done packaging.
[success] Total time: 28 s, completed Jan 6, 2020 1:15:49 PM
 
real	13m52.023s
user	18m56.110s
sys	0m11.392s
MinasKddCassales$               - Label 'dos' contains 10825 data points.
kmeans.KMeansVector$            - [dos] Running kmeansInitByFarthest.
kmeans.KMeansVector$            - [kmeansInitByFarthest] got 10825 points and 100 clusters.
MinasKddCassales$               - Label 'normal' contains 37966 data points.
kmeans.KMeansVector$            - [normal] Running kmeansInitByFarthest.
kmeans.KMeansVector$            - [kmeansInitByFarthest] got 37966 points and 100 clusters.
kmeans.KMeansVector$            - [kmeansInitByFarthest] Exceeded iterations.
kmeans.KMeansVector$            - [dos] Running kmeanspp [1].
kmeans.KMeansVector$            - [kmeansIterationRec] got 10825 points and 100 clusters.
kmeans.KMeansVector$            - assertion failed: [kmeansIterationRec] Expected k=100, got 51 on iteration 1.
kmeans.KMeansVector$            - [kmeansInitByFarthest] Exceeded iterations.
kmeans.KMeansVector$            - [normal] Running kmeanspp [1].
kmeans.KMeansVector$            - [kmeansIterationRec] got 37966 points and 100 clusters.
kmeans.KMeansVector$            - assertion failed: [kmeansIterationRec] Expected k=100, got 97 on iteration 1.
cat: 'tmpfs/out/stream-clusters.csv/*': No such file or directory


# 2020-01-06 17:10
kmeans.KMeansVector$            - [normal] i=77 farthest = (p= 13564, c= 7354, d= 0.9042669664081746), rem= 77
kmeans.KMeansVector$            - [normal] i=78 farthest = (p= 6133, c= 32256, d= 0.8997574021056489), rem= 78
kmeans.KMeansVector$            - [normal] i=79 farthest = (p= 8258, c= 12464, d= 0.8771781787230887), rem= 79
kmeans.KMeansVector$            - [normal] i=80 farthest = (p= 6730, c= 24490, d= 0.8766730476346687), rem= 80
kmeans.KMeansVector$            - [normal] i=81 farthest = (p= 43976, c= 22930, d= 0.8748401780590827), rem= 81
kmeans.KMeansVector$            - [normal] i=82 farthest = (p= 12624, c= 20234, d= 0.8671183871787762), rem= 82
kmeans.KMeansVector$            - [normal] i=83 farthest = (p= 40222, c= 32256, d= 0.866353884063049), rem= 83
kmeans.KMeansVector$            - [normal] i=84 farthest = (p= 20466, c= 44, d= 0.8479901124451156), rem= 84
kmeans.KMeansVector$            - [normal] i=85 farthest = (p= 26154, c= 15042, d= 0.8434171155155621), rem= 85
kmeans.KMeansVector$            - [normal] i=86 farthest = (p= 21826, c= 28637, d= 0.8411123729882831), rem= 86
kmeans.KMeansVector$            - [normal] i=87 farthest = (p= 44464, c= 21236, d= 0.8358780347341175), rem= 87
kmeans.KMeansVector$            - [normal] i=88 farthest = (p= 4099, c= 4110, d= 0.8233698402138104), rem= 88
kmeans.KMeansVector$            - [normal] i=89 farthest = (p= 24340, c= 18242, d= 0.8206686629454472), rem= 89
kmeans.KMeansVector$            - [normal] i=90 farthest = (p= 8529, c= 21396, d= 0.8066709856273272), rem= 90
kmeans.KMeansVector$            - [normal] i=91 farthest = (p= 22034, c= 18242, d= 0.8057344274096353), rem= 91
kmeans.KMeansVector$            - [normal] i=92 farthest = (p= 41931, c= 41939, d= 0.8035971289507686), rem= 92
kmeans.KMeansVector$            - [normal] i=93 farthest = (p= 7634, c= 24490, d= 0.7910487541788365), rem= 93
kmeans.KMeansVector$            - [normal] i=94 farthest = (p= 43696, c= 13592, d= 0.7801982525666159), rem= 94
kmeans.KMeansVector$            - [normal] i=95 farthest = (p= 14634, c= 26186, d= 0.7793520509866915), rem= 95
kmeans.KMeansVector$            - [normal] i=96 farthest = (p= 12168, c= 6133, d= 0.7756246369963989), rem= 96
kmeans.KMeansVector$            - [normal] i=97 farthest = (p= 11137, c= 32256, d= 0.7739538370651093), rem= 97
kmeans.KMeansVector$            - [normal] i=98 farthest = (p= 8274, c= 17354, d= 0.7554398871229858), rem= 98
kmeans.KMeansVector$            - [normal] i=99 farthest = (p= 43256, c= 8258, d= 0.7549708018470916), rem= 99
kmeans.KMeansVector$            - [normal] [kmeansInitByFarthest] 100 Clusters with [1..16539] points with variance [0.0..0.0]
kmeans.KMeansVector$            - [kmeansIterationRec] got 37966 points and 100 clusters.
kmeans.KMeansVector$            - [kmeansIterationRec] Iter 1, var 14236.86003786904 -> 40.60797386976431 (349.59272062006164 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [kmeansIterationRec] Iter 2, var 40.60797386976431 -> 40.99348025135834 (-0.009404090095064821 improvement, 1.0E-5 goal).
kmeans.KMeansVector$            - [normal] Running kmeanspp [1].
kmeans.KMeansVector$            - [kmeansIterationRec] got 37966 points and 100 clusters.
kmeans.KMeansVector$            - assertion failed: [kmeansIterationRec] Expected k=100, got 97 on iteration 1.
Exception in thread "main" org.apache.flink.runtime.client.JobExecutionException: Job execution failed.
	at org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)
	at org.apache.flink.runtime.minicluster.MiniCluster.executeJobBlocking(MiniCluster.java:626)
	at org.apache.flink.client.LocalExecutor.executePlan(LocalExecutor.java:222)
	at org.apache.flink.api.java.LocalEnvironment.execute(LocalEnvironment.java:91)
	at org.apache.flink.api.scala.ExecutionEnvironment.execute(ExecutionEnvironment.scala:539)
	at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$.delayedEndpoint$br$ufscar$dc$ppgcc$gsdr$minas$MinasKddCassales$1(MinasKddCassales.scala:49)
	at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$delayedInit$body.apply(MinasKddCassales.scala:19)
	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)
	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
	at scala.App$$anonfun$main$1.apply(App.scala:76)
	at scala.App$$anonfun$main$1.apply(App.scala:76)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)
	at scala.App$class.main(App.scala:76)
	at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$.main(MinasKddCassales.scala:19)
	at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales.main(MinasKddCassales.scala)
Caused by: java.lang.AssertionError: assertion failed: [kmeansIterationRec] Expected k=100, got 51 on iteration 1.
	at scala.Predef$.assert(Predef.scala:170)
	at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$.iterate$1(KMeansVector.scala:123)
	at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$.kmeansIterationRec(KMeansVector.scala:145)
	at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$.initialization$1(KMeansVector.scala:233)
	at br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KMeansVector$.kmeans(KMeansVector.scala:248)
	at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$$anonfun$3.apply(MinasKddCassales.scala:45)
	at br.ufscar.dc.ppgcc.gsdr.minas.MinasKddCassales$$anonfun$3.apply(MinasKddCassales.scala:40)
	at org.apache.flink.api.scala.GroupedDataSet$$anon$3.reduce(GroupedDataSet.scala:355)
	at org.apache.flink.api.java.operators.translation.PlanUnwrappingReduceGroupOperator$TupleUnwrappingNonCombinableGroupReducer.reduce(PlanUnwrappingReduceGroupOperator.java:111)
	at org.apache.flink.runtime.operators.GroupReduceDriver.run(GroupReduceDriver.java:131)
	at org.apache.flink.runtime.operators.BatchTask.run(BatchTask.java:504)
	at org.apache.flink.runtime.operators.BatchTask.invoke(BatchTask.java:369)
	at org.apache.flink.runtime.taskmanager.Task.doRun(Task.java:705)
	at org.apache.flink.runtime.taskmanager.Task.run(Task.java:530)
	at java.lang.Thread.run(Thread.java:748)
git_prompt_info:5: character not in range                                                                                                                                                     



MinasKddCassales$               - kmeans c=2 p=1000 i=4 / 10, movement=0.017169794030657676 / 1.0E-4
MinasKddCassales$               - kmeans c=2 p=1000 i=5 / 10, movement=0.011079418720269504 / 1.0E-4
MinasKddCassales$               - kmeans c=2 p=1000 i=6 / 10, movement=0.0 / 1.0E-4
00:49:29  puhl@pokebola  ...project/minas-flink/sbt-flink  ✹ ✚ ✭  5m10s 

MinasKddCassales$               - kmeans c=2 p=1000 i=8 / 10, movement=0.0 / 1.0E-4
java -Djava.io.tmpdir=./tmpfs/ -cp    346.92s user 3.35s system 123% cpu 4:42.72 total

kmeans.Kmeans$                  - kmeans c=2 p=100 i=0 / 10, movement=0.0 / 1.0E-4
MinasKddCassales$               - base centroids stream DONE
java -Djava.io.tmpdir=./tmpfs/ -cp    53.26s user 1.83s system 247% cpu 22.276 total
sed -n -r 's;(.+)INFO  (.+).gsdr.minas.(.+);\3;p'  0.12s user 0.06s system 0% cpu 22.276 total
 01:27:59  puhl@pokebola  ...project/minas-flink/sbt-flink  ✹ ✚ ✭  22s 
$ wc -l tmpfs/out/consumed-points.txt/*
    6091 tmpfs/out/consumed-points.txt/1
    6091 tmpfs/out/consumed-points.txt/2
       0 tmpfs/out/consumed-points.txt/3
       0 tmpfs/out/consumed-points.txt/4
       0 tmpfs/out/consumed-points.txt/5
   12184 tmpfs/out/consumed-points.txt/6
       0 tmpfs/out/consumed-points.txt/7
   24366 tmpfs/out/consumed-points.txt/8
   48732 total
 01:29:33  puhl@pokebola  ...project/minas-flink/sbt


  00:42:10  puhl@pokebola  ...project/minas-flink/sbt-flink  ✹ ✭ 
$ time java -Djava.io.tmpdir=./tmpfs/ -cp 'target/scala-2.11/sbt-flink-assembly-0.1.jar:' br.ufscar.dc.ppgcc.gsdr.minas.kmeans.KmeansTest
Final Stream normal -> 37966
step => 379
choosed => Vector(379, 758, 1137, 1516, 1895, 2274, 2653, 3032, 3411, 3790, 4169, 4548, 4927, 5306, 5685, 6064, 6443, 6822, 7201, 7580, 7959, 8338, 8717, 9096, 9475, 9854, 10233, 10612, 10991, 11370, 11749, 12128, 12507, 12886, 13265, 13644, 14023, 14402, 14781, 15160, 15539, 15918, 16297, 16676, 17055, 17434, 17813, 18192, 18571, 18950, 19329, 19708, 20087, 20466, 20845, 21224, 21603, 21982, 22361, 22740, 23119, 23498, 23877, 24256, 24635, 25014, 25393, 25772, 26151, 26530, 26909, 27288, 27667, 28046, 28425, 28804, 29183, 29562, 29941, 30320, 30699, 31078, 31457, 31836, 32215, 32594, 32973, 33352, 33731, 34110, 34489, 34868, 35247, 35626, 36005, 36384, 36763, 37142, 37521, 37900)
clusters => 100
result => Vector(2.004108062775918, 1.7960455941564952, 1.7558427467727558, 2.000047871016471, 1.7650798641028358, 1.7387120252713928, 1.7374620310442215, 2.8385952578669778, 1.763379766672522, 1.8866071423873316, 1.735490684141965, 1.7381482016426855, 1.6813498108979055, 1.1470063389957175, 2.0000172386914983, 2.0156717868723235, 1.7429091297343857, 2.0006911358753627, 1.7584444500959189, 1.4739510860034901, 2.0027030310201304, 2.02253012431317, 2.0000076918455467, 1.8492511278138364, 2.0023055457312124, 1.7417228641554963, 2.0005533121346977, 1.8277363212337707, 1.5088053519945774, 2.0082600672509177, 1.7609810683249068, 1.7369490222631434, 2.0000689343017988, 2.0004307897975635, 1.9907861701694238, 1.54870729582964, 1.7248325716140962, 1.7439313777682142, 2.0012213993397676, 1.2376355078194066, 1.7711614166766023, 1.775347475181344, 1.9732424165467273, 2.039647141677196, 2.0001551212942177, 1.8029121323666797, 1.7350318517784538, 1.939997036705759, 2.0002757159395244, 2.0017226019845786, 2.005452204951862, 1.9031528355763354, 1.8611728435054997, 1.7352589364985895, 2.003642670526744, 1.751589633059846, 1.7347699536608223, 1.789184727563871, 2.003064731923016, 1.8107128425973322, 1.80536467384294, 1.9564637492145103, 2.000323625189634, 1.837822650407619, 1.6348595299035884, 1.8726031271306935, 1.4188320677208925, 2.64998323603881, 1.7503625508675213, 1.7447186383249351, 2.0107011615461117, 2.000001943069032, 1.74099434985988, 2.0009058801008037, 2.2366347104578117, 1.3739653382673251, 1.7797915258393329, 1.7839130368644731, 1.747295520750771, 2.0000306384995565, 1.7365356442357642, 1.7679902430521537, 2.0964580450782395, 1.753658520814006, 2.000191621550447, 1.444226921364608, 1.7394826081093546, 1.8184284295732742, 1.7459229090624113, 2.0046227462284456, 1.735786289959713, 1.7361124488842188, 1.7489676866147694, 2.0064866071997316, 1.3125721055483275, 1.5909559602424992, 1.7402806642899524, 2.0001225564262253, 2.00009383452157, 1.9220064523236562)
Kmeans.kmeansInitialRandom
Final Stream dos -> 10825
step => 108
choosed => Vector(108, 216, 324, 432, 540, 648, 756, 864, 972, 1080, 1188, 1296, 1404, 1512, 1620, 1728, 1836, 1944, 2052, 2160, 2268, 2376, 2484, 2592, 2700, 2808, 2916, 3024, 3132, 3240, 3348, 3456, 3564, 3672, 3780, 3888, 3996, 4104, 4212, 4320, 4428, 4536, 4644, 4752, 4860, 4968, 5076, 5184, 5292, 5400, 5508, 5616, 5724, 5832, 5940, 6048, 6156, 6264, 6372, 6480, 6588, 6696, 6804, 6912, 7020, 7128, 7236, 7344, 7452, 7560, 7668, 7776, 7884, 7992, 8100, 8208, 8316, 8424, 8532, 8640, 8748, 8856, 8964, 9072, 9180, 9288, 9396, 9504, 9612, 9720, 9828, 9936, 10044, 10152, 10260, 10368, 10476, 10584, 10692, 10800)
clusters => 100
00:51 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 15, Vector(41860, 41738, 37969, 42418, 42755, 42595, 42642, 42216, 42037, 42470, 42799, 38842, 46175, 39360, 45763, 47988, 38023, 38148, 38268, 38391, 38518, 38641, 38771, 38895, 39012, 39131, 39254, 39375, 39494, 39624, 39743, 39856, 39965, 40078, 40189, 40297, 40407, 40515, 40624, 40732, 40840, 40948, 41056, 41164, 41272, 41380, 41488, 41596, 42849, 42957, 43065, 43173, 43281, 43389, 43497, 43605, 43713, 43821, 43929, 44037, 44145, 44253, 44412, 44520, 44628, 44736, 44844, 44952, 45060, 45168, 45276, 45384, 45492, 45600, 45708, 45867, 45975, 46083, 46249, 46357, 46465, 46573, 46681, 46789, 46897, 47011, 47132, 47246, 47416, 47529, 47637, 47745, 47853, 48068, 48176, 48284, 48392, 48500, 48656, 48766) => Set(46175, 42470, 41738, 42037, 41860, 42799, 42595, 38023, 42755, 42642, 38842, 42418, 42216, 39360, 37969)
result => Vector(2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 1.8438310333823662, 1.646909757580203, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 1.4815347758986392, 2.645751311065009, 2.067494068789165, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.036536751234758, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.0014305047125625, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.642796825304657, 2.304524043046031, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.0019417772518064, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.6442730325435195, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.6435350319673536, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.0023912903091947, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.002142628377757, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.6442730325435195, 2.645751311065009, 2.002980264281, 2.645751311065009, 2.6442730325435195, 2.645751311065009)
Kmeans.kmeansInitialRandom
Final Stream normal -> 37966
step => 379
choosed => Vector(379, 758, 1137, 1516, 1895, 2274, 2653, 3032, 3411, 3790, 4169, 4548, 4927, 5306, 5685, 6064, 6443, 6822, 7201, 7580, 7959, 8338, 8717, 9096, 9475, 9854, 10233, 10612, 10991, 11370, 11749, 12128, 12507, 12886, 13265, 13644, 14023, 14402, 14781, 15160, 15539, 15918, 16297, 16676, 17055, 17434, 17813, 18192, 18571, 18950, 19329, 19708, 20087, 20466, 20845, 21224, 21603, 21982, 22361, 22740, 23119, 23498, 23877, 24256, 24635, 25014, 25393, 25772, 26151, 26530, 26909, 27288, 27667, 28046, 28425, 28804, 29183, 29562, 29941, 30320, 30699, 31078, 31457, 31836, 32215, 32594, 32973, 33352, 33731, 34110, 34489, 34868, 35247, 35626, 36005, 36384, 36763, 37142, 37521, 37900)
clusters => 100
result => Vector(2.004108062775918, 1.7960455941564952, 1.7558427467727558, 2.000047871016471, 1.7650798641028358, 1.7387120252713928, 1.7374620310442215, 2.8385952578669778, 1.763379766672522, 1.8866071423873316, 1.735490684141965, 1.7381482016426855, 1.6813498108979055, 1.1470063389957175, 2.0000172386914983, 2.0156717868723235, 1.7429091297343857, 2.0006911358753627, 1.7584444500959189, 1.4739510860034901, 2.0027030310201304, 2.02253012431317, 2.0000076918455467, 1.8492511278138364, 2.0023055457312124, 1.7417228641554963, 2.0005533121346977, 1.8277363212337707, 1.5088053519945774, 2.0082600672509177, 1.7609810683249068, 1.7369490222631434, 2.0000689343017988, 2.0004307897975635, 1.9907861701694238, 1.54870729582964, 1.7248325716140962, 1.7439313777682142, 2.0012213993397676, 1.2376355078194066, 1.7711614166766023, 1.775347475181344, 1.9732424165467273, 2.039647141677196, 2.0001551212942177, 1.8029121323666797, 1.7350318517784538, 1.939997036705759, 2.0002757159395244, 2.0017226019845786, 2.005452204951862, 1.9031528355763354, 1.8611728435054997, 1.7352589364985895, 2.003642670526744, 1.751589633059846, 1.7347699536608223, 1.789184727563871, 2.003064731923016, 1.8107128425973322, 1.80536467384294, 1.9564637492145103, 2.000323625189634, 1.837822650407619, 1.6348595299035884, 1.8726031271306935, 1.4188320677208925, 2.64998323603881, 1.7503625508675213, 1.7447186383249351, 2.0107011615461117, 2.000001943069032, 1.74099434985988, 2.0009058801008037, 2.2366347104578117, 1.3739653382673251, 1.7797915258393329, 1.7839130368644731, 1.747295520750771, 2.0000306384995565, 1.7365356442357642, 1.7679902430521537, 2.0964580450782395, 1.753658520814006, 2.000191621550447, 1.444226921364608, 1.7394826081093546, 1.8184284295732742, 1.7459229090624113, 2.0046227462284456, 1.735786289959713, 1.7361124488842188, 1.7489676866147694, 2.0064866071997316, 1.3125721055483275, 1.5909559602424992, 1.7402806642899524, 2.0001225564262253, 2.00009383452157, 1.9220064523236562)
Kmeans.kmeansInitialRandom
00:51 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=0 / 10, movement=7.443865617642458 / 1.0E-4
00:51 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=1 / 10, movement=0.6654182703476093 / 1.0E-4
00:52 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=2 / 10, movement=0.44089582257373083 / 1.0E-4
00:52 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=3 / 10, movement=0.7691063778283378 / 1.0E-4
00:52 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=4 / 10, movement=1.0165791713169345 / 1.0E-4
00:52 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=5 / 10, movement=1.3077045919458263 / 1.0E-4
00:53 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=6 / 10, movement=0.7428147801483125 / 1.0E-4
00:53 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=7 / 10, movement=0.6848244130075078 / 1.0E-4
00:53 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=8 / 10, movement=0.8452840798346809 / 1.0E-4
00:53 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=9 / 10, movement=1.020523570354285 / 1.0E-4
00:54 INFO  kmeans.Kmeans$ kmeans [normal] c=100 p=37966 i=10 / 10, movement=0.7070998655490833 / 1.0E-4
Final Stream dos -> 10825
step => 108
choosed => Vector(108, 216, 324, 432, 540, 648, 756, 864, 972, 1080, 1188, 1296, 1404, 1512, 1620, 1728, 1836, 1944, 2052, 2160, 2268, 2376, 2484, 2592, 2700, 2808, 2916, 3024, 3132, 3240, 3348, 3456, 3564, 3672, 3780, 3888, 3996, 4104, 4212, 4320, 4428, 4536, 4644, 4752, 4860, 4968, 5076, 5184, 5292, 5400, 5508, 5616, 5724, 5832, 5940, 6048, 6156, 6264, 6372, 6480, 6588, 6696, 6804, 6912, 7020, 7128, 7236, 7344, 7452, 7560, 7668, 7776, 7884, 7992, 8100, 8208, 8316, 8424, 8532, 8640, 8748, 8856, 8964, 9072, 9180, 9288, 9396, 9504, 9612, 9720, 9828, 9936, 10044, 10152, 10260, 10368, 10476, 10584, 10692, 10800)
clusters => 100
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 15, Vector(41860, 41738, 37969, 42418, 42755, 42595, 42642, 42216, 42037, 42470, 42799, 38842, 46175, 39360, 45763, 47988, 38023, 38148, 38268, 38391, 38518, 38641, 38771, 38895, 39012, 39131, 39254, 39375, 39494, 39624, 39743, 39856, 39965, 40078, 40189, 40297, 40407, 40515, 40624, 40732, 40840, 40948, 41056, 41164, 41272, 41380, 41488, 41596, 42849, 42957, 43065, 43173, 43281, 43389, 43497, 43605, 43713, 43821, 43929, 44037, 44145, 44253, 44412, 44520, 44628, 44736, 44844, 44952, 45060, 45168, 45276, 45384, 45492, 45600, 45708, 45867, 45975, 46083, 46249, 46357, 46465, 46573, 46681, 46789, 46897, 47011, 47132, 47246, 47416, 47529, 47637, 47745, 47853, 48068, 48176, 48284, 48392, 48500, 48656, 48766) => Set(46175, 42470, 41738, 42037, 41860, 42799, 42595, 38023, 42755, 42642, 38842, 42418, 42216, 39360, 37969)
result => Vector(2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 1.8438310333823662, 1.646909757580203, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 1.4815347758986392, 2.645751311065009, 2.067494068789165, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.036536751234758, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.0014305047125625, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.642796825304657, 2.304524043046031, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.0019417772518064, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.6442730325435195, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.6435350319673536, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.0023912903091947, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.002142628377757, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.645751311065009, 2.6442730325435195, 2.645751311065009, 2.002980264281, 2.645751311065009, 2.6442730325435195, 2.645751311065009)
Kmeans.kmeansInitialRandom
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 15, Vector(47637, 48284, 40407, 43497, 43389, 43281, 44736, 37969, 41738, 44844, 39856, 39254, 41596, 46573, 41056, 46249, 43065, 45168, 44412, 39494, 44037, 41860, 44952, 42470, 38391, 39012, 46789, 42037, 47132, 39624, 47745, 38771, 47853, 48176, 45600, 38023, 46083, 47246, 42418, 45060, 42849, 46681, 38842, 42799, 38148, 40297, 45975, 39375, 42755, 40840, 39743, 44628, 43605, 41380, 43713, 40948, 40189, 41164, 43821, 48500, 48766, 47988, 48656, 45492, 42957, 38518, 45276, 39131, 44253, 46897, 48392, 39965, 45384, 40732, 40624, 43929, 46175, 46357, 45708, 38895, 42642, 40078, 47011, 44145, 38641, 40515, 42595, 45867, 47529, 41488, 41272, 38268, 46465, 47416, 39360, 43173, 42216, 44520, 45763, 48068) => Set(46175, 42470, 47637, 41738, 42037, 41860, 42799, 42595, 42755, 42642, 38842, 42418, 42216, 37969, 47988)
00:54 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=0 / 10, movement=2.170528368145405 / 1.0E-4
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 15, Vector(38641, 45060, 43281, 41380, 44844, 45600, 44037, 40948, 45492, 45384, 48392, 41860, 47988, 38148, 45975, 41488, 47246, 42849, 38518, 45867, 46175, 46249, 39494, 39254, 39965, 45763, 43821, 40189, 38391, 39131, 44253, 39743, 42470, 46357, 46573, 38023, 39856, 40407, 40840, 48500, 45276, 44145, 43065, 44952, 47529, 40624, 40297, 40515, 39624, 41164, 42595, 40078, 40732, 43713, 46083, 42642, 38268, 38842, 47132, 47745, 45708, 48766, 47853, 48656, 42418, 46789, 43389, 43929, 47416, 38771, 44628, 44520, 44412, 41596, 41738, 47011, 39375, 42957, 48284, 48068, 46897, 38895, 48176, 41056, 37969, 42755, 39360, 42037, 39012, 41272, 47637, 43605, 46465, 44736, 43497, 46681, 42216, 42799, 45168, 43173) => Set(46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 42755, 42642, 38842, 42216, 37969, 45763)
00:54 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=1 / 10, movement=0.48004037239996084 / 1.0E-4
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 18, Vector(37969, 45060, 43281, 41380, 44844, 45600, 44037, 40948, 45492, 45384, 48392, 38148, 45975, 41488, 47246, 42849, 38518, 45867, 42470, 46249, 39494, 39254, 47988, 39965, 43821, 40189, 42595, 38391, 39131, 42755, 44253, 39743, 46357, 46573, 45763, 38023, 39856, 40407, 40840, 48500, 45276, 42642, 44145, 43065, 44952, 47529, 40624, 40297, 40515, 39624, 41164, 40078, 40732, 43713, 38641, 46083, 42037, 38268, 47132, 47745, 45708, 48766, 47853, 48656, 46789, 43389, 43929, 47416, 38771, 44628, 42799, 44520, 41860, 44412, 42216, 41596, 47637, 47011, 39375, 38842, 42957, 48284, 48068, 46897, 38895, 41738, 48176, 41056, 39360, 42418, 39012, 41272, 43605, 46465, 44736, 43497, 46681, 45168, 46175, 43173) => Set(46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 42755, 45060, 42642, 38842, 42418, 42216, 37969, 47988, 45763)
00:54 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=2 / 10, movement=0.3813173937485797 / 1.0E-4
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 19, Vector(43281, 41380, 42470, 44844, 45600, 44037, 40948, 45492, 45384, 48392, 47988, 41860, 38148, 45975, 41488, 47246, 42849, 42216, 38518, 45867, 46249, 42755, 39494, 39254, 39965, 43821, 40189, 38391, 39131, 44253, 42595, 39743, 46357, 46573, 38023, 39856, 40407, 40840, 48500, 45276, 44145, 43065, 44952, 47529, 40624, 42642, 40297, 40515, 39624, 41164, 40078, 40732, 43713, 38842, 46083, 38268, 47132, 37969, 47745, 45708, 48766, 47853, 48656, 46789, 43389, 43929, 47416, 38771, 42799, 44628, 44520, 44412, 41596, 45060, 47011, 39375, 42957, 48284, 48068, 46897, 38895, 47637, 41738, 48176, 41056, 39360, 42418, 42037, 39012, 41272, 38641, 43605, 46465, 44736, 45763, 43497, 46681, 46175, 45168, 43173) => Set(46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 42755, 45060, 42642, 38842, 42418, 42216, 39360, 37969, 43281, 45763)
00:54 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=3 / 10, movement=1.5041356146416 / 1.0E-4
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 19, Vector(42037, 41380, 44844, 45600, 44037, 40948, 45492, 45384, 48392, 42642, 38842, 38148, 45975, 42799, 41488, 47246, 42849, 42216, 38518, 39360, 45867, 46249, 39494, 39254, 47988, 39965, 43821, 40189, 38391, 39131, 42470, 44253, 45060, 39743, 42755, 46357, 46573, 38023, 39856, 40407, 38641, 40840, 48500, 45276, 44145, 43065, 44952, 47529, 40624, 40297, 40515, 39624, 41164, 47637, 46175, 40078, 40732, 43713, 46083, 38268, 47132, 47745, 45708, 48766, 47853, 48656, 46789, 43389, 43929, 47416, 37969, 38771, 44628, 44520, 44412, 41596, 45763, 47011, 39375, 41860, 42957, 48284, 48068, 46897, 38895, 41738, 42595, 48176, 41056, 39012, 41272, 43605, 46465, 44736, 43497, 43281, 46681, 45168, 43173, 42418) => Set(41380, 46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 42755, 45060, 42642, 38842, 42418, 42216, 37969, 47988, 45763)
00:54 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=4 / 10, movement=0.7563993651304395 / 1.0E-4
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 20, Vector(44844, 45600, 44037, 40948, 45492, 45384, 42755, 48392, 42037, 47988, 38148, 45975, 45763, 41488, 47246, 42849, 38518, 45867, 46249, 45060, 39494, 39254, 42642, 39965, 42216, 43821, 40189, 38391, 39131, 42595, 44253, 39743, 47637, 46357, 46573, 38023, 39856, 40407, 38641, 40840, 48500, 45276, 43281, 44145, 43065, 42418, 44952, 47529, 40624, 38842, 40297, 40515, 39624, 41164, 40078, 40732, 43713, 46083, 38268, 42470, 47132, 47745, 45708, 48766, 46175, 47853, 48656, 46789, 43389, 43929, 41380, 47416, 38771, 39360, 44628, 44520, 44412, 41596, 47011, 41860, 39375, 42957, 48284, 48068, 46897, 38895, 41738, 48176, 41056, 37969, 39012, 41272, 43605, 46465, 44736, 43497, 46681, 45168, 42799, 43173) => Set(41380, 46175, 42470, 44844, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 42755, 45060, 42642, 38842, 42418, 42216, 39360, 37969, 45763)
00:54 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=5 / 10, movement=0.741125126580903 / 1.0E-4
00:54 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 21, Vector(43281, 42755, 45600, 44037, 40948, 45492, 45384, 42216, 48392, 38148, 45975, 41488, 47246, 42849, 47637, 38518, 39360, 45867, 46249, 39494, 39254, 47988, 45060, 39965, 43821, 40189, 46175, 38391, 39131, 44253, 39743, 42642, 38842, 46357, 46573, 38023, 39856, 40407, 38641, 42799, 40840, 48500, 42037, 45276, 44145, 43065, 42418, 45763, 44952, 47529, 40624, 40297, 40515, 39624, 41164, 40078, 42470, 40732, 43713, 46083, 38268, 47132, 47745, 45708, 48766, 47853, 48656, 46789, 43389, 43929, 47416, 38771, 37969, 44628, 44520, 44412, 41596, 47011, 41860, 39375, 42957, 48284, 48068, 44844, 46897, 38895, 41738, 48176, 41380, 41056, 39012, 41272, 42595, 43605, 46465, 44736, 43497, 46681, 45168, 43173) => Set(41380, 46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 42755, 45060, 42642, 38842, 42418, 42216, 39360, 37969, 47988, 43281, 45763)
00:54 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=6 / 10, movement=0.537254871622658 / 1.0E-4
00:55 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 21, Vector(42595, 42755, 45600, 44037, 40948, 45492, 45384, 48392, 38148, 46175, 45975, 41488, 47246, 42849, 42470, 47988, 38518, 45867, 46249, 39494, 39254, 39965, 47637, 43821, 40189, 38391, 39131, 38842, 44253, 39743, 46357, 46573, 38023, 39856, 40407, 38641, 40840, 48500, 45276, 45763, 44145, 43065, 42418, 44952, 47529, 40624, 40297, 40515, 39624, 41164, 40078, 40732, 43713, 37969, 46083, 38268, 42799, 47132, 47745, 45708, 48766, 47853, 48656, 46789, 43389, 43929, 47416, 38771, 42642, 41380, 44628, 42216, 44520, 42037, 44412, 41596, 44844, 47011, 41860, 39375, 42957, 48284, 48068, 46897, 38895, 45060, 39360, 41738, 48176, 41056, 39012, 41272, 43605, 46465, 44736, 43497, 43281, 46681, 45168, 43173) => Set(41380, 46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 45600, 42755, 45060, 42642, 38842, 42418, 42216, 39360, 37969, 47988, 45763)
00:55 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=7 / 10, movement=0.7879558889804557 / 1.0E-4
00:55 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 22, Vector(39360, 42755, 44844, 44037, 40948, 45492, 45384, 48392, 38148, 45975, 41488, 47246, 42849, 42470, 46175, 38518, 45867, 38842, 46249, 39494, 39254, 39965, 43821, 40189, 38391, 39131, 44253, 39743, 46357, 46573, 38023, 39856, 40407, 38641, 40840, 48500, 45276, 43281, 44145, 43065, 42642, 42418, 44952, 47529, 40624, 40297, 40515, 39624, 41164, 40078, 40732, 41380, 43713, 37969, 46083, 38268, 47132, 47745, 42595, 45708, 48766, 47853, 48656, 46789, 43389, 43929, 47416, 38771, 44628, 42216, 44520, 42037, 44412, 41596, 47637, 47011, 41860, 39375, 42957, 48284, 48068, 46897, 38895, 41738, 48176, 41056, 39012, 41272, 45060, 42799, 43605, 46465, 45600, 44736, 45763, 43497, 47988, 46681, 45168, 43173) => Set(41380, 46175, 42470, 44844, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 45600, 42755, 45060, 42642, 38842, 42418, 42216, 39360, 37969, 47988, 45763)
00:55 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=8 / 10, movement=1.6150689983398585 / 1.0E-4
00:55 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 22, Vector(43281, 42755, 45600, 37969, 44037, 40948, 45492, 45384, 42216, 48392, 38148, 45975, 41488, 47246, 42849, 42470, 38518, 45867, 46249, 39494, 39254, 39965, 43821, 40189, 38391, 39131, 44253, 45763, 39743, 46357, 46573, 38023, 39856, 40407, 38641, 41380, 40840, 48500, 45276, 44145, 43065, 42642, 42418, 44952, 47529, 40624, 46175, 40297, 40515, 38842, 39624, 41164, 47637, 40078, 40732, 43713, 46083, 38268, 47132, 47745, 42595, 45708, 48766, 47853, 48656, 39360, 46789, 45060, 43389, 43929, 47416, 38771, 44628, 44520, 42037, 44412, 41596, 47011, 41860, 42799, 39375, 42957, 48284, 48068, 44844, 46897, 38895, 41738, 48176, 41056, 39012, 41272, 43605, 46465, 44736, 43497, 47988, 46681, 45168, 43173) => Set(41380, 46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 45600, 42755, 45060, 42642, 38842, 42418, 42216, 39360, 37969, 47988, 43281, 45763)
00:55 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=9 / 10, movement=0.8097137322886788 / 1.0E-4
00:55 ERROR kmeans.Kmeans$ No missing clusters are allowed. Expected 100 got 22, Vector(45763, 45600, 45060, 42755, 44037, 40948, 45492, 45384, 48392, 38148, 45975, 41488, 47246, 42849, 42470, 38518, 45867, 46249, 39494, 39254, 39965, 43821, 40189, 38391, 39131, 44253, 39743, 42799, 46357, 46573, 38023, 39856, 40407, 38641, 40840, 48500, 45276, 37969, 44145, 43065, 42642, 42418, 44952, 47529, 40624, 40297, 40515, 41380, 39624, 41164, 40078, 40732, 43713, 46083, 42216, 38268, 47132, 47745, 42595, 45708, 48766, 47853, 48656, 46789, 43389, 43929, 47416, 46175, 38771, 44628, 44520, 42037, 44412, 41596, 44844, 47011, 41860, 39375, 42957, 48284, 48068, 46897, 38895, 41738, 48176, 41056, 47637, 38842, 39012, 41272, 43605, 46465, 39360, 44736, 43497, 43281, 47988, 46681, 45168, 43173) => Set(41380, 46175, 42470, 47637, 41738, 42037, 38641, 41860, 42799, 42595, 45600, 42755, 45060, 42642, 38842, 42418, 42216, 39360, 37969, 47988, 45763, 44037)
00:55 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=10 / 10, movement=1.183818847845601 / 1.0E-4
java -Djava.io.tmpdir=./tmpfs/ -cp    292.13s user 1.75s system 103% cpu 4:43.80 total
git_prompt_info:5: character not in range                                                                                                                                                     

 00:55:26  puhl@pokebola  ...project/minas-flink/sbt-flink  ✹ ✭  4m44s 
$ wc -l tmpfs/out/testing-clusters.txt 
200 tmpfs/out/testing-clusters.txt
git_prompt_info:5: character not in range                                                                                                                                                     

 00:55:35  puhl@pokebola  ...project/minas-

ERROR kmeans.Kmeans$ No missing clusters are allowed # => this means that clusters are still being ignored.


45168, 40840, 44520, 41860) => Set(46573, 46175, 42470, 41738, 42037, 41860, 42799, 42595, 38391, 42755, 38771, 42642, 45867, 47745, 38842, 42418, 42216, 39360, 37969, 47988, 45763, 46681)
18:12 INFO  kmeans.Kmeans$ kmeans [dos] c=100 p=10825 i=10 / 10, movement=1.1838188478456009 / 1.0E-4
java -Djava.io.tmpdir=./tmpfs/ -cp    621.09s user 8.31s system 113% cpu 9:13.74 total
18:17:49  puhl@pokebola  ...project/minas-flink/sbt-flink  ✖ ✹ ✭  9m13s 


0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)),Cluster(47011,Point(37994,Vector(0.0, 1.488370719225152E-6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)),0.0,dos,2359,1578955667233),0.0)
19:47 INFO  minas.MinasKdd$ afterConsumedHook (Some(dos),Point(442799,Vector(0.0, 1.488370719225152E-6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)),Cluster(44844,Point(37994,Vector(0.0, 1.488370719225152E-6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)),0.0,dos,2359,1578955667233),0.0)
java -Djava.io.tmpdir=./tmpfs/ -cp  br.ufscar.dc.ppgcc.gsdr.minas.MinasKdd  646.94s user 11.00s system 112% cpu 9:44.66 total
git_prompt_info:5: character not in range                                                                                                                                                     

 19:47:48  puhl@pokebola  ...project/minas-flink/sbt-flink  ➜ ✹ ✚  9m45s 
$ 
